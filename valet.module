<?php

/**
 * @file
 * Contains valet.module.
 */

use Drupal\Core\Url;

/**
 * Implements hook_page_bottom().
 *
 * Add valet markup to the bottom of the page automatically.
 */
function valet_page_bottom(array &$page_bottom) {
  if (\Drupal::currentUser()->hasPermission('access valet')) {
    $page_bottom['valet'] = [
      '#type' => 'valet',
      '#cache' => [
        'keys' => ['valet'],
        'contexts' => ['user.permissions'],
      ],
    ];
  }
}

/**
 * Implements hook_page_top().
 *
 * Add admin toolbar to the top of the page automatically.
 */
function valet_page_top(array &$page_top) {
  if (\Drupal::currentUser()->id() == 1) {
    $config = \Drupal::config('valet.admin');
    if ($config->get('toolbar_disable')) {
      unset($page_top['toolbar']);
    }
  }
}

/**
 * Implements hook_theme().
 */
function valet_theme() {
  return [
    'valet' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Implements hook_hook_info().
 */
function valet_hook_info() {
  $hooks = [
    'valet_results_alter' => [
      'group' => 'valet',
    ],
  ];
  return $hooks;
}

/**
 * Prepares variables for administration toolbar templates.
 *
 * Default template: valet.html.twig.
 *
 * @param array $vars
 *   An associative array containing:
 *   - element: An associative array containing the properties and children of
 *     the tray. Properties used: #children, #attributes and #bar.
 */
function template_preprocess_valet(array &$vars) {
  $element = $vars['element'];
  // Prepare valet attributes.
  $vars['attributes'] = $element['#attributes'];
}

/**
 * Implements hook_css_alter().
 */
function valet_css_alter(&$css) {

  $system_css_preprocess = \Drupal::config('system.performance')->get('css.preprocess');

  if (!$system_css_preprocess) {
    foreach ($css as $key => $value) {
      // If (strpos($value['data'], 'modules/') ==! FALSE) {
      // This option forces embeding with a link element.
      $css[$key]['preprocess'] = FALSE;
      // }.
    }
  }
}

/**
 * Implements hook_toolbar().
 */
function valet_toolbar() {
  $items['valet'] = [
    '#cache' => [
      'contexts' => ['user.permissions'],
    ],
  ];

  if (\Drupal::currentUser()->hasPermission('access valet')) {
    $items['valet'] += [
      '#weight' => 999,
      '#type' => 'toolbar_item',
      'tab' => [
        '#type' => 'link',
        '#title' => t('Go to'),
        '#url' => Url::fromRoute('<none>'),
        '#attributes' => [
          'title' => t('Use alt+d to start Valet and search for a page to go to') . ' ',
          'class' => ['toolbar-icon', 'toolbar-icon-valet', 'valet-trigger'],
        ],
      ],
      '#attached' => [
        'library' => ['valet/valet'],
      ],
    ];
  }

  return $items;
}
